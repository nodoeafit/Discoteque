version: '3.4'

services:
  discoteque.api:
    image: discoteque:latest
    build:
      context: .
      dockerfile: Discoteque.API/Dockerfile
    ports:
      - "5044:5044"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DiscotequeDatabase=Host=db;Port=5432;Database=discoteque;Username=discotequeUsr;Password=localDk
    depends_on:
      migration:
        condition: service_completed_successfully
    networks:
      - discoteque_network

  db:
    image: postgres:latest
    restart: always
    environment: 
      POSTGRES_USER: discotequeUsr
      POSTGRES_PASSWORD: localDk
      POSTGRES_DB: discoteque
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - discoteque_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U discotequeUsr -d discoteque"]
      interval: 5s
      timeout: 5s
      retries: 5

  migration:
    build:
      context: .
      dockerfile: Discoteque.API/Dockerfile
      target: build
    environment:
      - ConnectionStrings__DiscotequeDatabase=Host=db;Port=5432;Database=discoteque;Username=discotequeUsr;Password=localDk
    entrypoint: []
    command: >
      /bin/sh -c '
      dotnet tool install --global dotnet-ef &&
      export PATH="$$PATH:/root/.dotnet/tools" &&
      sleep 5 &&
      cd /src &&
      dotnet ef database update --project Discoteque.Data/Discoteque.Data.csproj --startup-project Discoteque.API/Discoteque.API.csproj --verbose
      '
    depends_on:
      db:
        condition: service_healthy
    networks:
      - discoteque_network

networks:
  discoteque_network:
    driver: bridge

volumes:
  postgres_data:
